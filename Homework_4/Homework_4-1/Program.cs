using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Homework_Theme_04
{
    class Program
    {
        static void Main(string[] args)
        {
            // Задание 1.
            // Заказчик просит вас написать приложение по учёту финансов
            // и продемонстрировать его работу.
            // Суть задачи в следующем: 
            // Руководство фирмы по 12 месяцам ведет учет расходов и поступлений средств. 
            // За год получены два массива – расходов и поступлений.
            // Определить прибыли по месяцам
            // Количество месяцев с положительной прибылью.
            // Добавить возможность вывода трех худших показателей по месяцам, с худшей прибылью, 
            // если есть несколько месяцев, в некоторых худшая прибыль совпала - вывести их все.
            // Организовать дружелюбный интерфейс взаимодействия и вывода данных на экран

            // Пример
            //       
            // Месяц      Доход, тыс. руб.  Расход, тыс. руб.     Прибыль, тыс. руб.
            //     1              100 000             80 000                 20 000
            //     2              120 000             90 000                 30 000
            //     3               80 000             70 000                 10 000
            //     4               70 000             70 000                      0
            //     5              100 000             80 000                 20 000
            //     6              200 000            120 000                 80 000
            //     7              130 000            140 000                -10 000
            //     8              150 000             65 000                 85 000
            //     9              190 000             90 000                100 000
            //    10              110 000             70 000                 40 000
            //    11              150 000            120 000                 30 000
            //    12              100 000             80 000                 20 000
            // 
            // Худшая прибыль в месяцах: 7, 4, 1, 5, 12
            // Месяцев с положительной прибылью: 10
            

            int[,] array = new int[12, 4];                                  // Инициализация 2х мерного массива

            // Заполняем таблицу доходами и расходами из поля ввода
            for (int m = 0; m < 12; m++)
            {
                array[m, 0] = m + 1;
                Console.WriteLine($"Введите доход за {m + 1} месяц (т.р.): ");
                array[m, 1] = int.Parse(Console.ReadLine());
                Console.WriteLine($"Введите расход за {m + 1} месяц (т.р.): ");
                array[m, 2] = int.Parse(Console.ReadLine());
            }

            // Заполняем таблицу доходами и расходами случайными числами
            //Random rand = new Random();
            //for (int m = 0; m < 12; m++)
            //{
            //    for (int n = 1; n < 3; n++)
            //    {
            //        array[m, 0] = m + 1;
            //        array[m, n] = rand.Next(70,74);
            //    }
            //}


            // Подсчёт прибыли

            for (int p = 0; p < 12; p++)
            {
                array[p, 3] = array[p, 1] - array[p, 2];
            }

            // Вывод массива-таблицы на экран
            Console.Clear();
            Console.WriteLine($"Месяц{"Доход(т.р.)",20}{"Расход(т.р.)",20}{"Прибыль(т.р.)",20}");


            // цикл for
            for (int i = 0; i < 12; i++)
            {
                for (int j = 0; j < 4; j++)
                {
                    if (j == 0)
                    {
                        Console.Write($"{array[i, j]}");                    // Вывод столбца месяцев без отступа
                    }
                    else
                    {
                        if (i >= 9 && j == 1)                               // Корректировка отступов на 10, 11 и 12 месяцах
                        {
                            Console.Write($"{array[i, j],19}");
                        }
                        else
                        {
                            Console.Write($"{array[i, j],20}");
                        }
                    }
                }
                Console.WriteLine();
            }

            #region Обход массива с помощью for
            //for (int i = 0; i < 12; i++)
            //{
            //    for (int j = 0; j < 4; j++)
            //    {
            //        Console.Write($"{array[i, j]}");
            //    }
            //    Console.WriteLine();
            //}
            #endregion

                            // Поиск положительных чисел в массиве 
            int positive = 0;
            for (int i = 0; i < 12; i++)
            {
                if (array[i, 3] > 0) positive++;
            }
            Console.WriteLine($"\nКол-во месяцев с положительной прибылью: {positive}");


                           // Поиск 3х наименьших значений

            int[] arrayCopy = new int[12];

            // Копирование столбца прибыли во временный массив
            for (int i = 0; i < 12; i++)
            {
                arrayCopy[i] = array[i, 3];
            }
            // Сортировка значений массива от минимального до максимального значения
            Array.Sort(arrayCopy);

            // Удаление дубликатов из массива
            int[] arrayCut = arrayCopy.Distinct().ToArray();

            Console.WriteLine("\nНаименьшая прибыль в месяцах: ");

            // Перебор 3х минимальных значений в массиве
            for (int k = 0; k < 3; k++)
            {
                for (int i = 0; i < 12; i++)
                {
                    if (array[i, 3] == arrayCut[k])
                    {
                        Console.Write($"{array[i, 0]} ");
                    }
                }
            }

            Console.ReadLine();
            
        }
    }
}
